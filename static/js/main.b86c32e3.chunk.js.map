{"version":3,"sources":["components/converter.js","App.js","index.js"],"names":["cryptosList","id","name","symbol","Converter","_useState","useState","_useState2","_slicedToArray","crypto","setCrypto","_useState3","_useState4","cryptoAmount","setCryptoAmount","_useState5","_useState6","currency","setCurrency","_useState7","_useState8","currencyAmount","setCurrencyAmount","_useState9","_useState10","currencies","setCurrencies","_useState11","_useState12","cryptos","useEffect","getConversionRate","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","conversionRate","wrap","_context","prev","next","axios","get","concat","sent","data","stop","apply","arguments","getCurrencies","_ref2","_callee2","_context2","_jsxs","className","children","_jsx","value","onChange","event","target","map","toUpperCase","type","readOnly","App","rootElement","document","getElementById","createRoot","render","StrictMode"],"mappings":"oOAIMA,EAAc,CAClB,CACEC,GAAI,UACJC,KAAM,UACNC,OAAQ,OAEV,CACEF,GAAI,WACJC,KAAM,WACNC,OAAQ,OAEV,CACEF,GAAI,cACJC,KAAM,eACNC,OAAQ,OAEV,CACEF,GAAI,UACJC,KAAM,UACNC,OAAQ,OAEV,CACEF,GAAI,SACJC,KAAM,SACNC,OAAQ,QAEV,CACEF,GAAI,MACJC,KAAM,MACNC,OAAQ,OAEV,CACEF,GAAI,SACJC,KAAM,SACNC,OAAQ,OAEV,CACEF,GAAI,WACJC,KAAM,WACNC,OAAQ,OAEV,CACEF,GAAI,WACJC,KAAM,WACNC,OAAQ,QAEV,CACEF,GAAI,WACJC,KAAM,WACNC,OAAQ,QAEV,CACEF,GAAI,YACJC,KAAM,YACNC,OAAQ,QAEV,CACEF,GAAI,aACJC,KAAM,QACNC,OAAQ,QAEV,CACEF,GAAI,UACJC,KAAM,UACNC,OAAQ,OAEV,CACEF,GAAI,YACJC,KAAM,YACNC,OAAQ,QAEV,CACEF,GAAI,WACJC,KAAM,WACNC,OAAQ,OAEV,CACEF,GAAI,SACJC,KAAM,SACNC,OAAQ,QAEV,CACEF,GAAI,WACJC,KAAM,WACNC,OAAQ,QAEV,CACEF,GAAI,kBACJC,KAAM,kBACNC,OAAQ,QAEV,CACEF,GAAI,eACJC,KAAM,eACNC,OAAQ,OAEV,CACEF,GAAI,gBACJC,KAAM,UACNC,OAAQ,SAEV,CACEF,GAAI,UACJC,KAAM,UACNC,OAAQ,OAEV,CACEF,GAAI,YACJC,KAAM,YACNC,OAAQ,QAEV,CACEF,GAAI,oBACJC,KAAM,oBACNC,OAAQ,OAEV,CACEF,GAAI,WACJC,KAAM,WACNC,OAAQ,OAEV,CACEF,GAAI,cACJC,KAAM,QACNC,OAAQ,SAEV,CACEF,GAAI,OACJE,OAAQ,MACRD,KAAM,QAER,CACED,GAAI,UACJC,KAAM,UACNC,OAAQ,QA+FGC,EA3FG,WAChB,IAAAC,EAA4BC,mBAAS,YAAWC,EAAAC,YAAAH,EAAA,GAAzCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,EAAwCL,mBAAS,GAAEM,EAAAJ,YAAAG,EAAA,GAA5CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,EAAgCT,mBAAS,OAAMU,EAAAR,YAAAO,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,EAA4Cb,mBAAS,GAAEc,EAAAZ,YAAAW,EAAA,GAAhDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,EAAoCjB,mBAAS,IAAGkB,EAAAhB,YAAAe,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,EAA8BrB,mBAASN,GAAY4B,EAAApB,YAAAmB,EAAA,GAA5CE,EAAOD,EAAA,GAAYA,EAAA,GAE1BE,qBAAU,WACR,IAAMC,EAAiB,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACDC,IAAMC,IAAI,qDAADC,OACuBpC,EAAM,mBAAAoC,OAAkB5B,IAC7E,KAAD,EAFKoB,EAAQG,EAAAM,KAGRR,EAAiBD,EAASU,KAAKtC,GAAQQ,GAC7CK,EAAkBT,EAAeyB,GAAgB,wBAAAE,EAAAQ,OAAA,GAAAZ,EAAA,KAClD,kBANsB,OAAAJ,EAAAiB,MAAA,KAAAC,UAAA,KAQvBnB,GACF,GAAG,CAAClB,EAAcJ,EAAQQ,IAE1Ba,qBAAU,WACR,IAAMqB,EAAa,eAAAC,EAAAnB,YAAAC,cAAAC,MAAG,SAAAkB,IAAA,IAAAhB,EAAA,OAAAH,cAAAK,MAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EACGC,IAAMC,IAC3B,mEACA,KAAD,EAFKP,EAAQiB,EAAAR,KAGdpB,EAAcW,EAASU,MAAM,wBAAAO,EAAAN,OAAA,GAAAK,EAAA,KAC9B,kBALkB,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAOnBC,GACF,GAAG,IAuBH,OACEI,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBF,eAAA,SAAAE,SAAA,CACEC,cAAA,KAAAD,SAAG,oBACHC,cAAA,UAAQC,MAAOlD,EAAQmD,SAhBF,SAACC,GAC1BnD,EAAUmD,EAAMC,OAAOH,MACzB,EAc0DF,SACjD5B,EAAQkC,KAAI,SAACtD,GAAM,OAClB8C,eAAA,UAAwBI,MAAOlD,EAAOR,GAAGwD,SAAA,CACtChD,EAAOP,KAAK,KAAGO,EAAON,OAAO6D,cAAc,MADjCvD,EAAOR,GAEX,SAIfyD,cAAA,SACAH,eAAA,SAAAE,SAAA,CACEF,eAAA,KAAAE,SAAA,CAAG,IAAEhD,EAAOuD,iBACZN,cAAA,SACEO,KAAK,SACLN,MAAO9C,EACP+C,SA1ByB,SAACC,GAChC/C,EAAgB+C,EAAMC,OAAOH,MAC/B,OA2BID,cAAA,SACAH,eAAA,SAAAE,SAAA,CACEC,cAAA,KAAAD,SAAG,kBACHC,cAAA,UAAQC,MAAO1C,EAAU2C,SA5BF,SAACC,GAC5B3C,EAAY2C,EAAMC,OAAOH,MAC3B,EA0B8DF,SACrDhC,EAAWsC,KAAI,SAAC9C,GAAQ,OACvByC,cAAA,UAAuBC,MAAO1C,EAASwC,SACpCxC,EAAS+C,eADC/C,EAEJ,MAGbyC,cAAA,SAAOO,KAAK,SAASN,MAAOtC,EAAgB6C,UAAQ,OAEtDR,cAAA,SACAA,cAAA,cAGN,E,MCrOe,SAASS,IACtB,OAAOT,cAACtD,EAAS,CAACoD,UAAU,aAC9B,CCCA,IAAMY,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACHd,cAACe,aAAU,CAAAhB,SACTC,cAACS,EAAG,M","file":"static/js/main.b86c32e3.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./converter.css\";\r\n\r\nconst cryptosList = [\r\n  {\r\n    id: \"bitcoin\",\r\n    name: \"Bitcoin\",\r\n    symbol: \"BTC\"\r\n  },\r\n  {\r\n    id: \"ethereum\",\r\n    name: \"Ethereum\",\r\n    symbol: \"ETH\"\r\n  },\r\n  {\r\n    id: \"binancecoin\",\r\n    name: \"Binance Coin\",\r\n    symbol: \"BNB\"\r\n  },\r\n  {\r\n    id: \"cardano\",\r\n    name: \"Cardano\",\r\n    symbol: \"ADA\"\r\n  },\r\n  {\r\n    id: \"tether\",\r\n    name: \"Tether\",\r\n    symbol: \"USDT\"\r\n  },\r\n  {\r\n    id: \"xrp\",\r\n    name: \"XRP\",\r\n    symbol: \"XRP\"\r\n  },\r\n  {\r\n    id: \"solana\",\r\n    name: \"Solana\",\r\n    symbol: \"SOL\"\r\n  },\r\n  {\r\n    id: \"polkadot\",\r\n    name: \"Polkadot\",\r\n    symbol: \"DOT\"\r\n  },\r\n  {\r\n    id: \"usd-coin\",\r\n    name: \"USD Coin\",\r\n    symbol: \"USDC\"\r\n  },\r\n  {\r\n    id: \"dogecoin\",\r\n    name: \"Dogecoin\",\r\n    symbol: \"DOGE\"\r\n  },\r\n  {\r\n    id: \"avalanche\",\r\n    name: \"Avalanche\",\r\n    symbol: \"AVAX\"\r\n  },\r\n  {\r\n    id: \"terra-luna\",\r\n    name: \"Terra\",\r\n    symbol: \"LUNA\"\r\n  },\r\n  {\r\n    id: \"uniswap\",\r\n    name: \"Uniswap\",\r\n    symbol: \"UNI\"\r\n  },\r\n  {\r\n    id: \"chainlink\",\r\n    name: \"Chainlink\",\r\n    symbol: \"LINK\"\r\n  },\r\n  {\r\n    id: \"litecoin\",\r\n    name: \"Litecoin\",\r\n    symbol: \"LTC\"\r\n  },\r\n  {\r\n    id: \"cosmos\",\r\n    name: \"Cosmos\",\r\n    symbol: \"ATOM\"\r\n  },\r\n  {\r\n    id: \"algorand\",\r\n    name: \"Algorand\",\r\n    symbol: \"ALGO\"\r\n  },\r\n  {\r\n    id: \"wrapped-bitcoin\",\r\n    name: \"Wrapped Bitcoin\",\r\n    symbol: \"WBTC\"\r\n  },\r\n  {\r\n    id: \"bitcoin-cash\",\r\n    name: \"Bitcoin Cash\",\r\n    symbol: \"BCH\"\r\n  },\r\n  {\r\n    id: \"matic-network\",\r\n    name: \"Polygon\",\r\n    symbol: \"MATIC\"\r\n  },\r\n  {\r\n    id: \"stellar\",\r\n    name: \"Stellar\",\r\n    symbol: \"XLM\"\r\n  },\r\n  {\r\n    id: \"shiba-inu\",\r\n    name: \"Shiba Inu\",\r\n    symbol: \"SHIB\"\r\n  },\r\n  {\r\n    id: \"internet-computer\",\r\n    name: \"Internet Computer\",\r\n    symbol: \"ICP\"\r\n  },\r\n  {\r\n    id: \"filecoin\",\r\n    name: \"Filecoin\",\r\n    symbol: \"FIL\"\r\n  },\r\n  {\r\n    id: \"theta-token\",\r\n    name: \"THETA\",\r\n    symbol: \"THETA\"\r\n  },\r\n  {\r\n    id: \"tron\",\r\n    symbol: \"trx\",\r\n    name: \"TRON\"\r\n  },\r\n  {\r\n    id: \"vechain\",\r\n    name: \"VeChain\",\r\n    symbol: \"VET\"\r\n  }\r\n];\r\n\r\nconst Converter = () => {\r\n  const [crypto, setCrypto] = useState(\"ethereum\");\r\n  const [cryptoAmount, setCryptoAmount] = useState(0);\r\n  const [currency, setCurrency] = useState(\"inr\");\r\n  const [currencyAmount, setCurrencyAmount] = useState(0);\r\n  const [currencies, setCurrencies] = useState([]);\r\n  const [cryptos, setCryptos] = useState(cryptosList);\r\n\r\n  useEffect(() => {\r\n    const getConversionRate = async () => {\r\n      const response = await axios.get(\r\n        `https://api.coingecko.com/api/v3/simple/price?ids=${crypto}&vs_currencies=${currency}`\r\n      );\r\n      const conversionRate = response.data[crypto][currency];\r\n      setCurrencyAmount(cryptoAmount * conversionRate);\r\n    };\r\n\r\n    getConversionRate();\r\n  }, [cryptoAmount, crypto, currency]);\r\n\r\n  useEffect(() => {\r\n    const getCurrencies = async () => {\r\n      const response = await axios.get(\r\n        \"https://api.coingecko.com/api/v3/simple/supported_vs_currencies\"\r\n      );\r\n      setCurrencies(response.data);\r\n    };\r\n\r\n    getCurrencies();\r\n  }, []);\r\n\r\n  /*  useEffect(() => {\r\n    const getCryptos = async () => {\r\n      const response = await axios.get('https://api.coingecko.com/api/v3/coins/list');\r\n      setCryptos(response.data);\r\n    };\r\n\r\n    getCryptos();\r\n  }, []);\r\n*/\r\n  const handleCryptoChange = (event) => {\r\n    setCrypto(event.target.value);\r\n  };\r\n\r\n  const handleCryptoAmountChange = (event) => {\r\n    setCryptoAmount(event.target.value);\r\n  };\r\n\r\n  const handleCurrencyChange = (event) => {\r\n    setCurrency(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"converter\">\r\n      <label>\r\n        <p>CRYPTO CURRENCY</p>\r\n        <select value={crypto} onChange={handleCryptoChange}>\r\n          {cryptos.map((crypto) => (\r\n            <option key={crypto.id} value={crypto.id}>\r\n              {crypto.name} ({crypto.symbol.toUpperCase()})\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n      <br />\r\n      <label>\r\n        <p> {crypto.toUpperCase()}</p>\r\n        <input\r\n          type=\"number\"\r\n          value={cryptoAmount}\r\n          onChange={handleCryptoAmountChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        <p>FIAT CURRENCY</p>\r\n        <select value={currency} onChange={handleCurrencyChange}>\r\n          {currencies.map((currency) => (\r\n            <option key={currency} value={currency}>\r\n              {currency.toUpperCase()}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input type=\"number\" value={currencyAmount} readOnly />\r\n      </label>\r\n      <br />\r\n      <label></label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Converter;\r\n","import Converter from \"./components/converter\";\nimport \"./styles.css\";\nexport default function App() {\n  return <Converter className=\"converter\" />;\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}